import React from 'react';

const GitTutorial = () => {
  return (
    <div className="w-full max-w-5xl mx-auto p-4 sm:p-6 lg:p-8 text-white bg-gray-800 rounded-md">
      <h1 className="text-xl sm:text-2xl lg:text-3xl text-teal-500 font-bold mb-4">
        কেন গিট?
      </h1>
      <div className="border border-gray-400 p-4 sm:p-6 lg:p-8 rounded-lg">
        <p className="mb-4">
          তানিম আর রাইহান, দুই বন্ধু, একটি অসাধারণ ওয়েবসাইট বানানোর চিন্তা করলো। তানিম UI ডিজাইন এবং HTML, CSS নিয়ে কাজ করতে খুব দক্ষ, অন্যদিকে রাইহান জাভাস্ক্রিপ্ট এবং API ইন্টিগ্রেশনে বেশ পারদর্শী।
        </p>
        <div className="mb-4">
          <p>
            তাদের ওয়েবসাইট প্রোজেক্টে UI ডিজাইন এবং ফাংশনালিটি উভয়ই সমান গুরুত্বপূর্ণ। সুতরাং, তাদের দুজনকেই একই প্রোজেক্টে একসঙ্গে কাজ করতে হবে যাতে সেরা ফলাফল পাওয়া যায়।
          </p>
        </div>
        <div className="mb-4">
          <p>
            <strong>সমস্যা:</strong> 
            প্রাথমিকভাবে তারা ফাইলগুলিকে জিপ করে একে অপরকে পাঠানোর মাধ্যমে কাজ করছিল এবং প্রতিটি পরিবর্তন একসঙ্গে ম্যানেজ করছিল। কিন্তু এই পদ্ধতিতে কাজ করতে গেলে সময় নষ্ট হয় এবং ফাইল ম্যানেজমেন্টেও নানা সমস্যা হয়, যেমন একাধিক ফাইলের ভিড় এবং একসাথে কাজ করতে না পারা।
          </p>
        </div>
        <div className="mb-4">
          <p>
            <strong>উপায়:</strong> 
            গিট এবং গিটহাবের সাহায্যে এই সমস্যাগুলির সমাধান করা সম্ভব। গিট একটি ভার্শন কন্ট্রোল সিস্টেম যা প্রোজেক্টের প্রতিটি পরিবর্তন ট্র্যাক করে। এতে করে প্রোজেক্টের একাধিক ভার্শন তৈরি করা সহজ হয় এবং একাধিক ডেভেলপার একসঙ্গে কাজ করতে পারে, যার ফলে পুরো প্রোজেক্টের উপর নিয়ন্ত্রণ বজায় থাকে।
          </p>
        </div>

        <div className="border-t border-gray-300 mt-4 pt-4">
          <h2 className="text-lg sm:text-xl lg:text-2xl text-teal-400 font-semibold mb-4">
            গিট কি এবং এর সুবিধা
          </h2>
          <p className="mb-4">
            গিট হলো ভার্শন কন্ট্রোল সিস্টেম। গিটের অনেকগুলো কাজের মধ্যে প্রধান এবং প্রাথমিক কাজ হচ্ছে আপনার প্রোজেক্টের প্রত্যেকটা চেঞ্জ ট্র্যাক করে রাখা আপনার মন/চাহিদা মতো। আপনাকে বারবার প্রোজেক্টের নতুন ভার্শনের জন্য নতুন করে আগের প্রোজেক্ট কপি করে আরেকটা নতুন ফোল্ডার/ডিরেক্টরিতে রাখতে হবে না। আপনি জাস্ট কয়েকটা গিট এর কমান্ড দিয়েই চাইলে আপনি আপনার প্রোজেক্টের ট্র্যাক করা আগের ভার্শনে চলে যেতে পারবেন। আবার একদম নতুন ভার্শনও চলে আসতে পারবেন। এর জন্যে আপনার একটা ডিরেক্টরিই থাকবে, প্রত্যেকটা ফাইলেরও একটা কপি থাকবে আপনার প্রোজেক্টের ডিরেক্টরিতে। আপনাকে আপনার প্রোজেক্টের ভার্শন চেঞ্জ করার জন্যে কোনো ফাইল হাত দিতে হবে না। সব গিট করে দিবে।
          </p>
          <p className="mb-4">
            এখন গিট ব্যবহার করলে খুব সহজেই উপরের উদাহরণে একটা ফাইলই থাকতো, কিন্তু চাইলে আবার আমরা গিট কমান্ডের সাহায্যে আগের ভার্শনগুলোতেও যেতে পারবো।
          </p>
          <p className="mb-4">
            এছাড়াও গিট ব্রাঞ্চ সিস্টেম রয়েছে যেটার প্রধান কাজ হলো, আমরা মাঝে মাঝে আমাদের প্রোজেক্টে নতুন অজানা কোনো ফিচার অ্যাড করতে চাই। অনেক ক্ষেত্রে দেখা যায় আমাদের এই ফিচারটা কেমন লাগবে সেটা সম্পর্কে ধারণা নাই। ভাবি হয়তো একবার ফিচারটা অ্যাড করে নিয়ে দেখলে বলা যাবে আসলে ফিচারটা প্রোজেক্টের সাথে যায় কি যায় না।
          </p>
          <p className="mb-4">
            সেক্ষেত্রে গিট ছাড়া হয়তো আমরা আমাদের মেইন প্রোজেক্টেই সেটা অ্যাড করতাম। তারপর টেস্ট করতাম কেমন হয়েছে সেটা দেখার জন্যে। তারপর ভালো না লাগলে আবার সব জায়গায় গিয়ে গিয়ে ম্যানুয়ালি নতুন লেখা কোডগুলো মুছে ফেলতে হতো, ফাইল ডিলিট করতে হতো। আর ভালো লাগলে ব্যাস এভাবেই রেখে দিতে হতো।
          </p>
          <p className="mb-4">
            কিন্তু গিট এর ব্রাঞ্চিং এর মাধ্যমে আমরা আমাদের প্রোজেক্টের আরেকটা ব্রাঞ্চ ক্রিয়েট করি কিছু কমান্ড দিয়ে। তারপর সেখানে আমরা আমাদের নতুন ফিচার টেস্ট করি। তারপর ভালো লাগলে সে ব্রাঞ্চ মেইন প্রোজেক্টের সাথে মার্জ করে ফেলি, আর ভালো না লাগলে সে ব্রাঞ্চ থেকে আবার মেইন প্রোজেক্টে চলে আসি। এক্ষেত্রে আমরা যেহেতু অন্য ব্রাঞ্চে কাজ করেছি, তাই মেইন প্রোজেক্টে কোনো হাতই দেওয়া হয় নাই। খুব সহজেই কয়েকটা কমান্ড দিয়েই আবার মেইন প্রোজেক্টে চলে আসতে পারবো। আর ম্যানুয়ালি আমাদের কোড মুছে ফেলা বা ফাইল ডিলিট করা কিছুই করতে হবে না।
          </p>
        </div>

        <div className="border-t border-gray-300 mt-4 pt-4">
          <p className="mb-4">
            গিট ব্যবহার করে কিভাবে প্রোজেক্টের ভার্শন কন্ট্রোল করা যায়, তার একটি উদাহরণ নিচে দেওয়া হলো:
          </p>
          <pre className="bg-gray-700 text-white p-4 rounded-lg overflow-x-auto">
            <code>
              git init{'\n'}
              git add .{'\n'}
              git commit -m "Initial commit"{'\n'}
              git remote add origin https://github.com/your-repo-url.git{'\n'}
              git push -u origin master
            </code>
          </pre>
        </div>
        <div className="border-t border-gray-300 mt-4 pt-4">
        <h2 className="text-lg sm:text-xl text-teal-400 font-semibold mb-4">গিটহাব কি?</h2>
        <p className="mb-4">
          গিটহাব ব্যাসিক্যালি হোস্টিং সার্ভিস, তবে একটু স্পেশাল। কেমন স্পেশাল? হ্যাঁ, ঠিক অনুমান করেছেন, এটা গিট ভার্শন কন্ট্রোল সিস্টেমের জন্যে হোস্ট প্রোভাইড করে। আর সাথে কিছু ইউজার ইন্টারফেসও প্রোভাইড করে গিটের কাজগুলো করার জন্যে। এখন গিটহাবই একমাত্র হোস্ট প্রোভাইডার না এখানে, আরো যেমন বিটবাকেট, গিটল্যাবসহ আরো অনেক আছে।
        </p>
        <p className="mb-4">
          কিন্তু আমি এখানে গিটহাব হাইলাইট করেছি। কারণ গিটহাবেই অনেক বড় বড় ওপেন সোর্স অনেক প্রোজেক্ট রয়েছে আর এটাই বেশী পপুলার। আর এদের সবার ইন্টারফেসই কাছাকাছি, একটা শিখে ফেললে অন্যান্যগুলোতেও আপনি সহজেই কাজ করতে পারবেন।
        </p>
        <p className="mb-4">
          গিটহাবের অল্টারনেটিভ হিসেবে বিটবাকেট, গিটল্যাব থেকে শুরু করে অসংখ্য ছোটো বড় এরকম সার্ভিস এভেইলেবল আছে, বিভিন্ন টিম বিভিন্ন সুবিধা-অসুবিধার কারণে একটার উপর আরেকটা চয়েজ করে।
        </p>
        <p className="mb-4">
          এখন এগুলোতে আমার প্রোজেক্ট হোস্ট করে কি লাভ? হ্যাঁ ঠিক, সেটাই এখন খুলে বলবো কেন আমাদের জন্যে হোস্টিং প্রোভাইডারও লাগবে। আমাদের প্রোজেক্টে মাঝেমধ্যে একাধিক ডেভেলপার থাকে বা টিমওয়ার্ক করলে একাধিক ডেভেলপাররা একই প্রোজেক্টের উপর কাজ করে। এখন আমরা চাইলে আমাদের প্রোজেক্টের ভার্শন কন্ট্রোল সিস্টেমসহ আমাদের বাকি টিমমেটদের সাথে শেয়ার করতে পারবো এইধরনের হোস্ট ব্যবহার করে, বা গিটহাব/বিটবাকেট/গিটল্যাব দিয়ে।
        </p>
        <p className="mb-4">
          আমার টিমমেটরাও আমার সেইম প্রোজেক্টটা পাবে, চাইলে আমার আগের ভার্শনগুলোও দেখতে পারবে, আবার চাইলে নিজেও নতুন আরেকটা ভার্শন অ্যাড করে আবার গিটহাবের মাধ্যমে শেয়ার করতে পারবে। আর আমি আবার গিট কমান্ড দিয়ে সে ভার্শন আমার লোকাল ডিস্কে নিয়ে আসতে পারবো।
        </p>
        <p className="mb-4">
          এখন গিটহাবে প্রোজেক্ট এভাবে ওপেনও রাখা যায় আবার চাইলে প্রাইভেট প্রোজেক্টও রাখা যায়। গিটহাবে এমন অনেক প্রোজেক্ট দেখবেন যেখানে কয়েক হাজার ডেভেলপার কন্ট্রিবিউট করেছে একইসাথে, একই প্রোজেক্টে। এগুলো সবই সম্ভব হয়েছে মূলত এই গিট ও গিটহাবের মতো সার্ভিসের কারণে।
        </p>
      </div>
      </div>
    </div>
  );
};

export default GitTutorial;
